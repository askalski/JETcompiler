;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!!begin FuncallOperatorExpr:
;!!begin FuncallOperatorExpr:
;!!begin IntegerLiteral:
%uid.2 = alloca i32
store i32 5, i32* %uid.2
;!!end IntegerLiteral:
%uid.1 = load i32* %uid.2
%uid.3 = call i32 @fac(i32 %uid.1)
;!!end FuncalOperatorExpr
%uid.4 = alloca i32
store i32 %uid.3, i32* %uid.4
%uid.0 = load i32* %uid.4
call void @printInt(i32 %uid.0)
;!!end FuncalOperatorExpr
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.5 = alloca i32
store i32 0, i32* %uid.5
;!!end IntegerLiteral:
%uid.6 = load i32* %uid.5
ret i32 %uid.6
}
define i32 @fac(i32 %uid.7) {
%uid.8 = alloca i32
store i32 %uid.7, i32* %uid.8
;!!end function header
;!!begin DeclarationStmt, FieldValue == null
%uid.9 = alloca i32
;!!end DeclarationStmt
;!!begin DeclarationStmt, FieldValue == null
%uid.10 = alloca i32
;!!end DeclarationStmt
;!!begin AssignmentExpr:
;!!begin IntegerLiteral:
%uid.11 = alloca i32
store i32 1, i32* %uid.11
;!!end IntegerLiteral:
;!!begin and end of IdentifierExpr, passing "%uid.9" as "r"
%uid.12 = load i32* %uid.11
store i32 %uid.12, i32* %uid.9
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin and end of IdentifierExpr, passing "%uid.8" as "a"
;!!begin and end of IdentifierExpr, passing "%uid.10" as "n"
%uid.13 = load i32* %uid.8
store i32 %uid.13, i32* %uid.10
;!!end AssignmentExpr:
;!!begin WhileStmt:
br label %Label0LoopCond
Label0LoopCond:
;!!begin RelationExpr:
;!!begin and end of IdentifierExpr, passing "%uid.10" as "n"
%uid.14 = load i32* %uid.10
;!!begin IntegerLiteral:
%uid.16 = alloca i32
store i32 0, i32* %uid.16
;!!end IntegerLiteral:
%uid.15 = load i32* %uid.16
%uid.17 = icmp sgt i32 %uid.14, %uid.15
%uid.18 = alloca i1
store i1 %uid.17, i1* %uid.18
;!!end RelationExpr
%uid.19 = load i1* %uid.18
br i1 %uid.19, label %Label1LoopBody, label %Label2LoopEnd
Label1LoopBody:
;!!begin AssignmentExpr:
;!!begin MultExpr:
;!!begin and end of IdentifierExpr, passing "%uid.9" as "r"
%uid.20 = load i32* %uid.9
;!!begin and end of IdentifierExpr, passing "%uid.10" as "n"
%uid.21 = load i32* %uid.10
%uid.22 = mul i32 %uid.20, %uid.21
%uid.23 = alloca i32
store i32 %uid.22, i32* %uid.23
;!!end MultExpr
;!!begin and end of IdentifierExpr, passing "%uid.9" as "r"
%uid.24 = load i32* %uid.23
store i32 %uid.24, i32* %uid.9
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.10" as "n"
%uid.25 = load i32* %uid.10
;!!begin IntegerLiteral:
%uid.27 = alloca i32
store i32 1, i32* %uid.27
;!!end IntegerLiteral:
%uid.26 = load i32* %uid.27
%uid.28 = sub i32 %uid.25, %uid.26
%uid.29 = alloca i32
store i32 %uid.28, i32* %uid.29
;!!end AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.10" as "n"
%uid.30 = load i32* %uid.29
store i32 %uid.30, i32* %uid.10
;!!end AssignmentExpr:
br label%Label0LoopCond
Label2LoopEnd:
;!!end WhileStmt
;!!ReturnStmt:
;!!begin and end of IdentifierExpr, passing "%uid.9" as "r"
%uid.31 = load i32* %uid.9
ret i32 %uid.31
}
