;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!! IfteStmt
;!!begin EqualExpr:
;!!begin BooleanLiteral:
%uid.1 = alloca i1
store i1 1, i1* %uid.1
;!!end BooleanLiteral:
%uid.0 = load i1* %uid.1
;!!begin BooleanLiteral:
%uid.3 = alloca i1
store i1 1, i1* %uid.3
;!!end BooleanLiteral:
%uid.2 = load i1* %uid.3
%uid.4 = icmp eqi1%uid.0, %uid.2
%uid.5 = alloca i1
store i1 %uid.4, i1* %uid.5
;!!end EqualExpr:
%uid.6 = load i1* %uid.5
br i1 %uid.6, label %Label0IfteTrue, label %Label1IfteFalse
Label0IfteTrue:
;!!begin FuncallOperatorExpr:
;!!begin IntegerLiteral:
%uid.8 = alloca i32
store i32 42, i32* %uid.8
;!!end IntegerLiteral:
%uid.7 = load i32* %uid.8
call void @printInt(i32 %uid.7)
;!!end FuncalOperatorExpr
br label %Label2IfteEnd
Label1IfteFalse:
br label %Label2IfteEnd
Label2IfteEnd:
;!!end ifte
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.9 = alloca i32
store i32 0, i32* %uid.9
;!!end IntegerLiteral:
%uid.10 = load i32* %uid.9
ret i32 %uid.10
}
