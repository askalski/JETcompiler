;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!!begin DeclarationStmt, FieldValue == null
%uid.0 = alloca i32
;!!end DeclarationStmt
;!!begin DeclarationStmt, FieldValue == null
%uid.1 = alloca i32
;!!end DeclarationStmt
;!!begin AssignmentExpr:
;!!begin IntegerLiteral:
%uid.2 = alloca i32
store i32 45, i32* %uid.2
;!!end IntegerLiteral:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "x"
%uid.3 = load i32* %uid.2
store i32 %uid.3, i32* %uid.0
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin UnaryMinus:
;!!begin IntegerLiteral:
%uid.4 = alloca i32
store i32 36, i32* %uid.4
;!!end IntegerLiteral:
%uid.5 = load i32* %uid.4
%uid.6 = alloca i32
%uid.7 = sub i32 0, %uid.5
store i32 %uid.7, i32* %uid.6
;!!end UnaryMinusExpr
;!!begin and end of IdentifierExpr, passing "%uid.1" as "y"
%uid.8 = load i32* %uid.6
store i32 %uid.8, i32* %uid.1
;!!end AssignmentExpr:
;!!begin FuncallOperatorExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "x"
%uid.9 = load i32* %uid.0
call void @printInt(i32 %uid.9)
;!!end FuncalOperatorExpr
;!!begin FuncallOperatorExpr:
;!!begin and end of IdentifierExpr, passing "%uid.1" as "y"
%uid.10 = load i32* %uid.1
call void @printInt(i32 %uid.10)
;!!end FuncalOperatorExpr
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.11 = alloca i32
store i32 0, i32* %uid.11
;!!end IntegerLiteral:
%uid.12 = load i32* %uid.11
ret i32 %uid.12
}
