;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!!begin FuncallOperatorExpr:
%uid.1 = call i32 @foo()
;!!end FuncalOperatorExpr
%uid.2 = alloca i32
store i32 %uid.1, i32* %uid.2
;!!begin DeclarationStmt, FieldValue != null
%uid.0 = alloca i32
%uid.3 = load i32* %uid.2
store i32 %uid.3, i32* %uid.0
;!!end DeclarationStmt
;!!begin FuncallOperatorExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "x"
%uid.4 = load i32* %uid.0
call void @printInt(i32 %uid.4)
;!!end FuncalOperatorExpr
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.5 = alloca i32
store i32 0, i32* %uid.5
;!!end IntegerLiteral:
%uid.6 = load i32* %uid.5
ret i32 %uid.6
}
define i32 @foo() {
;!!end function header
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.7 = alloca i32
store i32 10, i32* %uid.7
;!!end IntegerLiteral:
%uid.8 = load i32* %uid.7
ret i32 %uid.8
}
