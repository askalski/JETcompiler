;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!!begin FuncallOperatorExpr:
;!!begin FuncallOperatorExpr:
;!!begin IntegerLiteral:
%uid.2 = alloca i32
store i32 17, i32* %uid.2
;!!end IntegerLiteral:
%uid.1 = load i32* %uid.2
%uid.3 = call i32 @ev(i32 %uid.1)
;!!end FuncalOperatorExpr
%uid.4 = alloca i32
store i32 %uid.3, i32* %uid.4
%uid.0 = load i32* %uid.4
call void @printInt(i32 %uid.0)
;!!end FuncalOperatorExpr
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.5 = alloca i32
store i32 0, i32* %uid.5
;!!end IntegerLiteral:
%uid.6 = load i32* %uid.5
ret i32 %uid.6
}
define i32 @ev(i32 %uid.7) {
%uid.8 = alloca i32
store i32 %uid.7, i32* %uid.8
;!!end function header
;!! IfteStmt
;!!begin RelationExpr:
;!!begin and end of IdentifierExpr, passing "%uid.8" as "y"
%uid.9 = load i32* %uid.8
;!!begin IntegerLiteral:
%uid.11 = alloca i32
store i32 0, i32* %uid.11
;!!end IntegerLiteral:
%uid.10 = load i32* %uid.11
%uid.12 = icmp sgt i32 %uid.9, %uid.10
%uid.13 = alloca i1
store i1 %uid.12, i1* %uid.13
;!!end RelationExpr
%uid.14 = load i1* %uid.13
br i1 %uid.14, label %Label0IfteTrue, label %Label1IfteFalse
Label0IfteTrue:
;!!ReturnStmt:
;!!begin FuncallOperatorExpr:
;!!begin AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.8" as "y"
%uid.16 = load i32* %uid.8
;!!begin IntegerLiteral:
%uid.18 = alloca i32
store i32 2, i32* %uid.18
;!!end IntegerLiteral:
%uid.17 = load i32* %uid.18
%uid.19 = sub i32 %uid.16, %uid.17
%uid.20 = alloca i32
store i32 %uid.19, i32* %uid.20
;!!end AddExpr:
%uid.15 = load i32* %uid.20
%uid.21 = call i32 @ev(i32 %uid.15)
;!!end FuncalOperatorExpr
%uid.22 = alloca i32
store i32 %uid.21, i32* %uid.22
%uid.23 = load i32* %uid.22
ret i32 %uid.23
br label %Label2IfteEnd
Label1IfteFalse:
;!! IfteStmt
;!!begin RelationExpr:
;!!begin and end of IdentifierExpr, passing "%uid.8" as "y"
%uid.24 = load i32* %uid.8
;!!begin IntegerLiteral:
%uid.26 = alloca i32
store i32 0, i32* %uid.26
;!!end IntegerLiteral:
%uid.25 = load i32* %uid.26
%uid.27 = icmp slt i32 %uid.24, %uid.25
%uid.28 = alloca i1
store i1 %uid.27, i1* %uid.28
;!!end RelationExpr
%uid.29 = load i1* %uid.28
br i1 %uid.29, label %Label3IfteTrue, label %Label4IfteFalse
Label3IfteTrue:
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.30 = alloca i32
store i32 0, i32* %uid.30
;!!end IntegerLiteral:
%uid.31 = load i32* %uid.30
ret i32 %uid.31
br label %Label5IfteEnd
Label4IfteFalse:
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.32 = alloca i32
store i32 1, i32* %uid.32
;!!end IntegerLiteral:
%uid.33 = load i32* %uid.32
ret i32 %uid.33
br label %Label5IfteEnd
Label5IfteEnd:
;!!end ifte
br label %Label2IfteEnd
Label2IfteEnd:
;!!end ifte
}
