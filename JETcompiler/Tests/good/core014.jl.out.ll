;Code generated by JETcompiler

declare i8*    @malloc(i32)
declare i8*    @calloc(i32, i32)
declare void   @free(i8*)
declare void   @printInt(i32)
declare void   @printDouble(double)
declare void   @printFloat(float)
declare void   @printString(i8*)
declare i32    @readInt()
declare double @readDouble()
declare float  @readFloat()

define i32 @main() {
;!!end function header
;!!begin DeclarationStmt, FieldValue == null
%uid.0 = alloca i32
;!!end DeclarationStmt
;!!begin DeclarationStmt, FieldValue == null
%uid.1 = alloca i32
;!!end DeclarationStmt
;!!begin DeclarationStmt, FieldValue == null
%uid.2 = alloca i32
;!!end DeclarationStmt
;!!begin AssignmentExpr:
;!!begin IntegerLiteral:
%uid.3 = alloca i32
store i32 1, i32* %uid.3
;!!end IntegerLiteral:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
%uid.4 = load i32* %uid.3
store i32 %uid.4, i32* %uid.0
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.5 = load i32* %uid.0
store i32 %uid.5, i32* %uid.1
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin IntegerLiteral:
%uid.6 = alloca i32
store i32 5000000, i32* %uid.6
;!!end IntegerLiteral:
;!!begin and end of IdentifierExpr, passing "%uid.2" as "mx"
%uid.7 = load i32* %uid.6
store i32 %uid.7, i32* %uid.2
;!!end AssignmentExpr:
;!!begin FuncallOperatorExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
%uid.8 = load i32* %uid.0
call void @printInt(i32 %uid.8)
;!!end FuncalOperatorExpr
;!!begin WhileStmt:
br label %Label0LoopCond
Label0LoopCond:
;!!begin RelationExpr:
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.9 = load i32* %uid.1
;!!begin and end of IdentifierExpr, passing "%uid.2" as "mx"
%uid.10 = load i32* %uid.2
%uid.11 = icmp slt i32 %uid.9, %uid.10
%uid.12 = alloca i1
store i1 %uid.11, i1* %uid.12
;!!end RelationExpr
%uid.13 = load i1* %uid.12
br i1 %uid.13, label %Label1LoopBody, label %Label2LoopEnd
Label1LoopBody:
;!!begin FuncallOperatorExpr:
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.14 = load i32* %uid.1
call void @printInt(i32 %uid.14)
;!!end FuncalOperatorExpr
;!!begin AssignmentExpr:
;!!begin AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
%uid.15 = load i32* %uid.0
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.16 = load i32* %uid.1
%uid.17 = add i32 %uid.15, %uid.16
%uid.18 = alloca i32
store i32 %uid.17, i32* %uid.18
;!!end AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.19 = load i32* %uid.18
store i32 %uid.19, i32* %uid.1
;!!end AssignmentExpr:
;!!begin AssignmentExpr:
;!!begin AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.1" as "hi"
%uid.20 = load i32* %uid.1
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
%uid.21 = load i32* %uid.0
%uid.22 = sub i32 %uid.20, %uid.21
%uid.23 = alloca i32
store i32 %uid.22, i32* %uid.23
;!!end AddExpr:
;!!begin and end of IdentifierExpr, passing "%uid.0" as "lo"
%uid.24 = load i32* %uid.23
store i32 %uid.24, i32* %uid.0
;!!end AssignmentExpr:
br label%Label0LoopCond
Label2LoopEnd:
;!!end WhileStmt
;!!ReturnStmt:
;!!begin IntegerLiteral:
%uid.25 = alloca i32
store i32 0, i32* %uid.25
;!!end IntegerLiteral:
%uid.26 = load i32* %uid.25
ret i32 %uid.26
}
